name: 'C++ CI'

on:
  push:
    paths:
      - 'helloworld/**'
      - 'homework*/**'
      - '.github/**'
    branches:
      - master
      - feature/github_actions

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'packages' output variable
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            helloworld: helloworld
            homework02: homework02
  # JOB to build and test each of modified packages
  build:
    needs: changes
    strategy:
      matrix:
        # https://lightrun.com/answers/dorny-paths-filter-is-there-a-way-to-list-only-folders-with-changes
        # Parse JSON array containing names of all filters matching any of changed files
        # e.g. ['package1', 'package2'] if both package folders contains changes
        package: ${{ fromJSON(needs.changes.outputs.packages) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: |
          sudo apt-get update && sudo apt-get install libboost-test-dev -y
          cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_BOOST_TEST=ON
          cmake --build .
          cmake --build . --target test
          cmake --build . --target package
        working-directory: ${{ matrix.package }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ matrix.package }}/${{ matrix.package }}-0.0.${{ github.run_number }}-Linux.deb
          asset_name: ${{ matrix.package }}-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
